services:
  catalogdb:
    image: postgres:latest
    container_name: catalogdb
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: CatalogDb
    volumes:
      - catalogdb_data:/var/lib/postgresql/data
  
  basketdb:
    image: postgres:latest
    container_name: basketdb
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: BasketDb
    volumes:
      - basketdb_data:/var/lib/postgresql/data
  
  basketRedis:
    image: redis:latest
    ports:
      - "6382:6379"
    volumes:
      - "basketRedis-data:/data"

  discountdb:
    image: postgres:latest
    container_name: discountdb
    restart: unless-stopped
    ports:
      - "5438:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: DiscountDb
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - discountdb_data:/var/lib/postgresql/data
  
  orderdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: orderdb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SwN12345678
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - orderdb_data:/var/opt/mssql
  
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  
  catalog.api:
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__PostgresConnection=Server=catalogdb;Port=5432;Database=CatalogDb;User Id=postgres;Password=postgres;Include Error Detail=true
    depends_on:
      - catalogdb
    ports:
      - "6000:8080"
      - "6060:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  basket.api:
    build:
      context: .
      dockerfile: Services/Basket/Basket.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__PostgresConnection=Server=basketdb;Port=5432;Database=BasketDb; User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__RedisConnection=basketRedis:6379
      - GrpcSettings__DiscountUrl=https://discount.grpc:8081
      - MessageBroker__Host=amqp://rabbitmq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - basketdb
      - basketRedis
      - discount.grpc
      - rabbitmq
    ports:
      - "6001:8080"
      - "6061:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  discount.grpc:
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__PostgresConnection=Server=discountdb;Port=5432;Database=DiscountDb; User Id=postgres;Password=postgres;Include Error Detail=true
    depends_on:
      - discountdb
    ports:
      - "6002:8080"
      - "6062:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  ordering.api:
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=orderdb,1433;Database=OrderDb;User Id=sa;Password=SwN12345678;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://rabbitmq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - FeatureManagement__OrderFullfilment=false
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "6003:8080"
      - "6063:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  yarpapigateway:
    build:
      context: .
      dockerfile: ApiGateways/YarpApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    depends_on:
      - catalog.api
      - basket.api
      - ordering.api
    ports:
      - "6004:8080"
      - "6064:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

volumes:
  catalogdb_data:
  basketdb_data:
  basketRedis-data:
  discountdb_data:
  orderdb_data:
